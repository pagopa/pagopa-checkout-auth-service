name: Semantic versioning

on:
  push:
    branches: [ "CHK-4016-fix-app-version" ]

permissions:
  contents: write
  pull-requests: write

jobs:
  semver-update:
    name: Update semver for every eligible file of repo (helm charts, gradle files, etc.)
    runs-on: ubuntu-latest
    environment: prod
    outputs:
      app_version: ${{ steps.get_new_ver.outputs.version }}
    steps:
        # Without this step, changes would be applied to a detached head
      - name: Checkout release branch
        uses: actions/checkout@v2
        with:
          ref: 'CHK-4016-fix-app-version'
      # setup git author
      - name: Setup git author
        run: |
          git config --global user.email "${{ secrets.BOT_GIT_MAIL }}" && git config --global user.name "${{ secrets.BOT_GIT_USER }}"
        # bump version
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'
      - name: Get New App Version
        id: get_new_ver
        run: |
          ./gradlew help incrementVersion --versionIncrementType=patch 
          version=$(./gradlew printVersion -Psnapshot=false  -q | head -n1 | cut -d' ' -f2)
          git add build.gradle.kts
          echo $version
          echo "version=$version" >> $GITHUB_OUTPUT
      - name: Update Helm Version Values
        run: |
          for i in helm/values-*.yaml; do
            [ -f "$i" ] || break
            yq -i ".microservice-chart.image.tag = \"${{steps.get_new_ver.outputs.version}}\"" "$i"
            git add "$i"
          done
      - name: Update Chart App Version
        run: |
          CHART_FILE="helm/Chart.yaml"
            if [[ -f "$CHART_FILE" ]]; then
              yq -i ".appVersion = \"${{steps.get_new_ver.outputs.version}}\"" "$CHART_FILE"
              git add "$CHART_FILE"
          fi
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
      - name: Install semver globally
        run: yarn global add semver
      - name: Update Chart Version
        run: |
          RELEASE_CHART_SEMVER= patch
          CHART_FILE="helm/Chart.yaml"
          CURRENT_CHART_VERSION=$(yq -r '.version' $CHART_FILE)
          if [[ -f "$CHART_FILE" ]]; then
            yq -i ".version = \"$(semver $CURRENT_CHART_VERSION -i $RELEASE_CHART_SEMVER )\"" "$CHART_FILE"
            git add "$CHART_FILE"
          fi
        # push new version
      - name: Push New Version
        run: |
          git diff --cached
          git commit -m "Bump version [skip ci]"
          git push origin CHK-4016-fix-app-version
      - name: Set Up Github Release
        id: setup_github_release
        run: |
          CHART_FILE="helm/Chart.yaml"
          chart_version=$(yq -r '.version' $CHART_FILE)
          HEAD_SHA=$(git rev-parse HEAD)
          TAG="$chart_version"
          TITLE="Release $chart_version"
          echo "HEAD_SHA=$HEAD_SHA" >> $GITHUB_OUTPUT
          echo "TAG=$TAG" >> $GITHUB_OUTPUT
          echo "TITLE=$TITLE" >> $GITHUB_OUTPUT
        # create new github release
      - name: Create New Github Release
        uses: ncipollo/release-action@a2e71bdd4e7dab70ca26a852f29600c98b33153e # v1.12.0
        env:
          GITHUB_TOKEN: ${{ secrets.BOT_GITHUB_TOKEN }}
        with:
          commit: ${{ steps.setup_github_release.HEAD_SHA }}
          tag: ${{ steps.setup_github_release.TAG }}
          name: ${{ steps.setup_github_release.TITLE }}
          makeLatest: true
          generateReleaseNotes: true
          draft: false
          prerelease: false